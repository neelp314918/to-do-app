{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\neelp\\\\Desktop\\\\todo-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // State variables to hold todo list, selected user ID, and fetching status\n  const [np_todo, np_setTodo] = useState([]);\n  const [np_userID, np_setUserID] = useState(1);\n  const [np_fetching, np_setFetching] = useState(false);\n\n  // Function to handle user selection change\n  function np_handleChange(e) {\n    console.log(e.target.value);\n    np_setUserID(e.target.value);\n  }\n\n  // Effect to fetch todo list when user ID changes\n  useEffect(() => {\n    np_setFetching(true);\n    console.log(\"test\");\n    fetch(`https://dummyjson.com/todos/user/${np_userID}`).then(res => res.json()).then(data => {\n      np_setTodo(data.todos);\n      np_setFetching(false);\n    });\n  }, [np_userID]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"To Do App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"user\",\n        children: \"Please select a User : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"user\",\n        onChange: np_handleChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"1\",\n          children: \"Arthur\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2\",\n          children: \"Lily\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"3\",\n          children: \"George\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: np_fetching ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: np_todo.map(np_task => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: np_task.todo\n          }, np_task.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 36\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"BLX6H5laQWb3kcWNhbe8eUV2/8c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","App","_s","np_todo","np_setTodo","np_userID","np_setUserID","np_fetching","np_setFetching","np_handleChange","e","console","log","target","value","fetch","then","res","json","data","todos","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","onChange","map","np_task","todo","_c","$RefreshReg$"],"sources":["C:/Users/neelp/Desktop/todo-app/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nfunction App() {\n    // State variables to hold todo list, selected user ID, and fetching status\n    const [np_todo, np_setTodo] = useState([]);\n    const [np_userID, np_setUserID] = useState(1);\n    const [np_fetching, np_setFetching] = useState(false);\n\n    // Function to handle user selection change\n    function np_handleChange(e) {\n        console.log(e.target.value);\n        np_setUserID(e.target.value);\n    }\n\n    // Effect to fetch todo list when user ID changes\n    useEffect(() => {\n        np_setFetching(true);\n        console.log(\"test\");\n        fetch(`https://dummyjson.com/todos/user/${np_userID}`)\n            .then((res) => res.json())\n            .then((data) => {\n                np_setTodo(data.todos);\n                np_setFetching(false);\n            });\n    }, [np_userID]);\n\n    return (\n        <section>\n            <header>\n                {/* Title and author info */}\n                <h1>To Do App</h1>\n            </header>\n            <div>\n                {/* Dropdown to select user */}\n                <label htmlFor=\"user\">Please select a User : </label>\n                <select id=\"user\" onChange={np_handleChange}>\n                    <option value=\"1\">Arthur</option>\n                    <option value=\"2\">Lily</option>\n                    <option value=\"3\">George</option>\n                </select>\n            </div>\n            <main>\n                {/* Display loading message or todo list */}\n                {np_fetching ? (\n                    <p>Loading Data</p>\n                ) : (\n                    <ul>\n                        {np_todo.map((np_task) => {\n                            return <li key={np_task.id}>{np_task.todo}</li>;\n                        })}\n                    </ul>\n                )}\n            </main>\n        </section>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}